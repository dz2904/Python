元组
#######################

与列表一样，元组也是序列，唯一的差别在于元组是不能修改的（字符串也不能修改）。

一般而言，使用列表就足以满足对序列的需求。

元组的基本操作
***********************

创建元组
=======================

元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。

.. highlight:: none

::

    >>> tup1 = ('Google', 'Runoob', 1997, 2000)
    >>> tup2 = (1, 2, 3, 4, 5 )

    #  不需要括号也可以
    >>> tup3 = "a", "b", "c", "d"
    >>> type(tup3)
    <class 'tuple'>


元组中只包含一个元素时，需要在元素后面添加逗号，否则括号会被当作运算符使用：

::

    >>>tup1 = (50)
    >>> type(tup1)
    <class 'int'>

    >>> tup1 = (50,)
    >>> type(tup1)
    <class 'tuple'>

    # 逗号至关重要
    >>> 3 * (40 + 2)
    126
    >>> 3 * (40 + 2,)
    (42, 42, 42)

函数 tuple 的工作原理与 list 很像，它将一个序列作为参数，并将其转换为元组。如果参数已经是元组，就原封不动地返回它。

::

    >>> tuple([1, 2, 3])
    (1, 2, 3)
    >>> tuple('abc')
    ('a', 'b', 'c')
    >>> tuple((1, 2, 3))
    (1, 2, 3)

其它操作
=======================

元组除创建和访问元素之外，可以对元组执行的操作不多，元组的访问方式与其他序列相同。

元组的切片也是元组，就像列表的切片也是列表一样。只要不尝试修改元组，与元组“打交道”通常意味着像处理列表一样处理它们（需要使用元组没有的 index 和 count 等方法除外）。
